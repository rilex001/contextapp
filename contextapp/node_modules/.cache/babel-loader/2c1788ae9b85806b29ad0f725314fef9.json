{"ast":null,"code":"var _jsxFileName = \"/home/rilex/react-context-hooks/src/context/ThemeContext.js\";\nimport React, { createContext, Component } from 'react';\nexport const ThemeContext = createContext();\n\nclass ThemeContextProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLightTheme: true,\n      light: {\n        syntax: '#555',\n        ui: '#ddd',\n        bg: '#eee'\n      },\n      dark: {\n        syntax: '#ddd',\n        ui: '#333',\n        bg: '#555'\n      }\n    };\n\n    this.toggleTheme = () => {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeContext.Provider, {\n      value: { ...this.state\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nexport default ThemeContextProvider;","map":{"version":3,"sources":["/home/rilex/react-context-hooks/src/context/ThemeContext.js"],"names":["React","createContext","Component","ThemeContext","ThemeContextProvider","state","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","render","props","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,SAA/B,QAAgD,OAAhD;AAEA,OAAQ,MAAMC,YAAY,GAAGF,aAAa,EAAlC;;AAER,MAAMG,oBAAN,SAAmCF,SAAnC,CAA6C;AAAA;AAAA;AAAA,SACzCG,KADyC,GACjC;AACJC,MAAAA,YAAY,EAAE,IADV;AAEJC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,EAAE,EAAE,MAAtB;AAA8BC,QAAAA,EAAE,EAAE;AAAlC,OAFH;AAGJC,MAAAA,IAAI,EAAE;AAACH,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,EAAE,EAAE,MAArB;AAA6BC,QAAAA,EAAE,EAAE;AAAjC;AAHF,KADiC;;AAAA,SAMzCE,WANyC,GAM3B,MAAM,CAEnB,CARwC;AAAA;;AASzCC,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,EAAC,GAAG,KAAKR;AAAT,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKS,KAAL,CAAWC,QADhB,CADJ;AAKH;;AAfwC;;AAkB7C,eAAeX,oBAAf","sourcesContent":["import React, { createContext, Component } from 'react'\n\nexport  const ThemeContext = createContext();\n\nclass ThemeContextProvider extends Component {\n    state = {\n        isLightTheme: true,\n        light: { syntax: '#555', ui: '#ddd', bg: '#eee'},\n        dark: {syntax: '#ddd', ui: '#333', bg: '#555'}\n    }\n    toggleTheme = () => {\n        \n    }\n    render(){\n        return (\n            <ThemeContext.Provider value={{...this.state}}>\n                {this.props.children}\n            </ThemeContext.Provider>\n        )\n    }\n}\n\nexport default ThemeContextProvider"]},"metadata":{},"sourceType":"module"}